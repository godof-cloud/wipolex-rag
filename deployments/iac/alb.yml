#   ----------------------------------------------------------------------
#   Copyright (C) 2018 World Intellectual Property Organization (WIPO).
#   All Rights Reserved.
#
#   v1.0    Kumar Vipin     Initial Version
#   ----------------------------------------------------------------------

AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  v1.1 Internet Facing/Internal application load balancer

Parameters:

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select a VPC that allows instances access to the Internet

  AlbSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: First ELB subnet

  AlbSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: Second ELB subnet

  NamePrefix:
    Description: Prefix for any naming properties
    Type: String
  
  AlbSecurityGroup:
    Type: List<AWS::EC2::SecurityGroup::Id> 
    
Resources:

  # ECSALBAccessRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: !Sub '${NamePrefix}-alb-external-role'
  #     AssumeRolePolicyDocument:
  #       Statement:
  #       - Effect: Allow
  #         Principal:
  #           Service: [elasticloadbalancing.amazonaws.com]
  #         Action: ['sts:AssumeRole']
  #     Path: /
      

  ECSALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Name: !Sub '${NamePrefix}-alb-external'
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '60'
      Subnets: [ !Ref AlbSubnet1Id, !Ref AlbSubnet2Id ]
      SecurityGroups: !Ref AlbSecurityGroup

  ALBTGEmpty:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub '${NamePrefix}-alb-external-tg-empty'

  ALBListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: [ ECSALB ]
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref ALBTGEmpty
      LoadBalancerArn: !Ref ECSALB
      Port: '80'
      Protocol: 'HTTP'
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig: 
            ContentType: text/html
            StatusCode: '403'
            MessageBody: '<html><head><title>HTTP 403</title></head><body><h1>Access denied</h1></body></html>'

Outputs:
  LoadBalancerRef:
    Description: Load Balancer Ref
    Value: !Ref ECSALB
    Export:
      Name: !Sub '${AWS::StackName}-alb-ref'

  LoadBalancerFullName:
    Description: Load Balancer Ref
    Value: !GetAtt ECSALB.LoadBalancerFullName
    Export:
      Name: !Sub '${AWS::StackName}-alb-fullname'

  LoadBalancerURL:
    Description: Your Application Load Balancer URL
    Value: !GetAtt ECSALB.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-alb-url'

  LoadBalancerListenerRef:
    Description: Load Balancer Listener Ref
    Value: !Ref ALBListenerHTTPS
    Export:
      Name: !Sub '${AWS::StackName}-alb-listener-ref'